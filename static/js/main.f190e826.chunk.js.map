{"version":3,"sources":["movieShape.js","util.js","components/Loading.js","components/Scales.js","components/MovieDetail.js","components/MovieList/ChipField.js","components/MovieList/Grid.js","components/MovieList/Table.js","components/MovieList/MovieList.js","components/Search.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["movieShape","id","predicate","FOAF","openid","parse","getStringNoLocale","set","setStringNoLocale","rating","VCARD","value","getAndParse","stringifyAndSet","tags","Other","KEY","THEME","light","dark","primary","secondary","AppTheme","createContext","overallScore","sigDigits","story","character","performance","visuals","soundtrack","res","Math","round","pow","sortRating","factor","a","b","sortExternalRating","field","isNaN","data","RATINGS","q","fetch","json","body","Search","getMovieData","localStorage","getItem","JSON","setItem","stringify","Loading","loading","height","Box","sx","display","justifyContent","CircularProgress","color","size","Scales","updateValue","helper","Container","Section","Header","align","Slider","onChange","step","marks","min","max","width","Value","HelperText","styled","div","h2","h3","p","MovieDetail","movie","onUpdate","handleClose","onDelete","useState","show","setShow","total","Dialog","open","onClose","DialogTitle","Title","DialogContent","fit","style","maxWidth","src","Poster","alt","title","Ratings","Total","_","val","DialogActions","Button","onClick","variant","href","span","ChipField","onSubmit","showForm","toggleEdit","setValue","wrap","map","d","Chip","label","marginBottom","marginLeft","Background","TextField","autoFocus","fullWidth","opacity","placeholder","onBlur","e","target","stopPropagation","onKeyDown","key","className","Grid","movies","addTag","removeTag","focus","toggleFocus","openRating","m","justify","position","top","left","focusX","focusY","Table","changeSort","sortedBy","setSortedBy","updateSort","FIELD","TableRow","background","prevScore","rank","i","score","Rank","Rating","justifySelf","imdbRating","Metascore","buildRows","RATE_FILTERS","MovieList","onSelect","displayList","setList","setFocus","rateFilter","setRateFilter","setFactor","sortFunction","setSortFunction","gridView","setGridView","tagFilter","setTagFilter","genreFilter","setGenreFilter","yearFilter","setYearFilter","titleFilter","setTitleFilter","tag","indexOf","slice","useEffect","filter","findIndex","t","toLowerCase","Genre","split","Year","sort","window","innerWidth","margin","length","Fab","add","idList","searchResults","setSearchResults","query","setQuery","timer","setTimer","searchMovies","then","clearTimeout","setTimeout","InputProps","endAdornment","theme","ErrorMsg","BigIcon","Actions","disabled","includes","imdbID","img","h1","Dashboard","user","useContext","SaveState","queue","updateQueue","saveFromQ","dataset","setDataset","mui","setLoading","updateMovies","detail","setDetail","list","initThing","thing","deleteMovie","deleteThing","url","updateMovie","updatedMovie","setAttr","addToUpdateQueue","loadAllMovieData","loadAllByName","Layout","nickname","name","to","IconButton","appLogin","Content","ui","save","muiTheme","newTheme","App","setUser","profile","setProfile","edit","getUser","handleIncomingRedirect","getDefaultSession","info","isLoggedIn","webId","loadThing","profileStruct","Error","console","error","loadDataset","getDomain","Provider","path","element","Consumer","saveState","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f190e826.chunk.js","sourcesContent":["import { getStringNoLocale, setStringNoLocale } from \"@inrupt/solid-client\";\nimport { FOAF, VCARD } from \"@inrupt/vocab-common-rdf\";\nimport { getAndParse, stringifyAndSet } from \"solid-core/dist/pods\";\n\nexport const movieShape = {\n  id: {\n    predicate: FOAF.openid,\n    parse: getStringNoLocale,\n    set: setStringNoLocale\n  },\n  rating: {\n    predicate: VCARD.value,\n    parse: getAndParse,\n    set: stringifyAndSet\n  },\n  tags: {\n    predicate: VCARD.Other,\n    parse: getAndParse,\n    set: stringifyAndSet\n  }\n}","import { createContext } from \"react\"\n\nconst KEY = \"9c3bca4\";\n\n// https://poolors.com/1c0038-10e7ef-fefeff-c499f1\nexport const THEME = {\n  light: '#1c0038',\n  dark: '#fefeff',\n  primary: '#10e7ef',\n  secondary: '#c499f1'\n}\n\nexport const AppTheme = createContext(THEME)\n\n// HOW LONG TO WAIT BETWEEN KEYSTROKES BEFORE HITTING SEARCH API\nexport const SEARCH_DELAY = 500;\n// HOW MANY POSITIONS RIGHT OF DECIMAL POINT WHEN ROUNDING\nexport const DECIMAL = 1;\n\nexport function overallScore(rating, sigDigits = DECIMAL) {\n  if (!rating\n    || !rating.story\n    || !rating.character\n    || !rating.performance\n    || !rating.visuals\n    || !rating.soundtrack\n  ) return null;\n  let res = (\n    rating.story\n    + (rating.character + rating.performance) / 2\n    + (rating.visuals + rating.soundtrack) / 2\n  ) / 3;\n  return Math.round(res * Math.pow(10, sigDigits)) / Math.pow(10, sigDigits);\n}\n\nexport const sortRating = (factor) => {\n  return (a, b) => (\n    !overallScore(a.rating) ? 1\n      : !overallScore(b.rating) ? -1\n        : (overallScore(b.rating) - overallScore(a.rating)) * factor\n  )\n}\n\nexport const sortExternalRating = (field) => (factor) => {\n  return (a, b) => (\n    isNaN(+a.data[field]) ? 1\n      : isNaN(+b.data[field]) ? -1\n        : (+b.data[field] - +a.data[field]) * factor\n  )\n}\n\nexport const RATINGS = {\n  story: [\n    `I'm staring at a blank screen`,\n    `The story is nonsense`,\n    `The story is not very relatable or meaningful`,\n    `The story is confusing and I'm not sure what the point is`,\n    `The story isn't important`,\n    `The story is basic and serves as a setting for the characters`,\n    `The story is interesting and challenges my expectations`,\n    `The story is interesting and challenges the norm in meaningful ways`,\n    `The story is interesting and full of meaningful exploration`,\n    `The perfect story. Meaningful. Powerful, Timeless.`\n  ],\n  character: [\n    `I saw a dead bird in the parking lot and went home`,\n    `The characters make no sense and served no purpose`,\n    `The characters are not very relatable`,\n    `The characters are inconsistent and their motives are confusing`,\n    `The characters are somewhat predictable and bland`,\n    `The characters are interesting and relatable`,\n    `The characters are relatable and experience meaningful growth`,\n    `The characters are well-realized, nuanced, and experience meaningful growth`,\n    `The characters are enthralling. I want to know more about them.`,\n    `I would watch a movie of these characters just talking to one another`\n  ],\n  performance: [\n    `They just cast that dead bird from the parking lot`,\n    `The performers clearly don't want to be in this movie`,\n    `The performers don't portray the characters well`,\n    `The performers are distracting`,\n    `The performers are fine, I don't notice them much`,\n    `Some/most of the performances are good`,\n    `The performers have good chemistry and really bring the characters to life`,\n    `Excellent performance, I have a hard time imagining a different cast`,\n    `Perfectly cast with stand-out performances`,\n    `Perfectly cast, delivering the performance of a lifetime`\n  ],\n  visuals: [\n    `I think it's a radio drama actually...`,\n    `The visuals make it hard to watch/follow`,\n    `The visuals are constantly distracting`,\n    `The visuals are fine, but some of the choices are distracting`,\n    `There is nothing notable about the visuals`,\n    `There are a couple scenes with striking visuals`,\n    `The visuals are good and really enhance the story-telling`,\n    `There are a lot of effective visuals with a lot of imagery`,\n    `There are constantly powerful visuals with striking imagery`,\n    `The visuals tell a story on their own`\n  ],\n  soundtrack: [\n    `Oh, this is a talkie?`,\n    `The soundtrack is apparently just the director's garbage playlist`,\n    `The soundtrack is distracting and doesn't fit the scenes well`,\n    `The soundtrack is mostly fine, but a little distracting`,\n    `There is nothing notable about the soundtrack`,\n    `The music/sounds in a couple scenes really enhance the impact`,\n    `The soundtrack is good and enhance the story-telling`,\n    `A lot of the songs are clearly intentionally chose to fit the scenes`,\n    `Every song and sound is intentional and impactful`,\n    `The soundtrack is used to tell a story of its own`\n  ]\n}\n\nexport async function searchMovies(q) {\n  let res = await fetch(`https://www.omdbapi.com/?apikey=${ KEY }&s=${ q }`);\n  let body = await res.json()\n  return body.Search ? body.Search : [];\n}\n\nexport async function getMovieData(id) {\n  let data = localStorage.getItem(id)\n  if (data) {\n    data = JSON.parse(data)\n  }\n  else {\n    data = await fetch(`https://www.omdbapi.com/?apikey=${ KEY }&i=${ id }`);\n    data = await data.json()\n    localStorage.setItem(id, JSON.stringify(data))\n  }\n  return data;\n}\n","import { Box, CircularProgress } from \"@material-ui/core\"\nimport { Column, Spacer } from \"solid-core/dist/components/styled\"\n\nconst Loading = ({ loading }) => {\n  return !loading ? null\n    : (\n      <Column>\n        <Spacer height='1em' />\n        <Box sx={ { display: 'flex', justifyContent: 'center' } }>\n          <CircularProgress color='secondary' size='5em' />\n        </Box>\n      </Column>\n    )\n}\n\nexport default Loading;","import { Slider } from '@material-ui/core';\nimport { Row, Spacer } from 'solid-core/dist/components/styled';\nimport styled from 'styled-components';\nimport { RATINGS, THEME } from '../util';\n\nconst Scales = ({ rating, updateValue, helper }) => {\n  return (\n    <Container>\n      {/* STORY */ }\n      <Section>\n        <Header>Story</Header>\n        <Row align='center'>\n          <Slider\n            onChange={ updateValue('story') }\n            value={ rating.story ? rating.story : 5 }\n            step={ 1 } marks\n            min={ 1 } max={ 10 }\n          />\n          <Spacer width='.5em' />\n          <Value>{ rating.story ? rating.story : '-' }</Value>\n        </Row>\n        { helper && <HelperText>{ rating.story ? RATINGS.story[rating.story - 1] : '' }</HelperText> }\n      </Section>\n      {/* CHARACTER */ }\n      <Section>\n        <Header>Character</Header>\n        <Row align='center'>\n          <Slider\n            onChange={ updateValue('character') }\n            value={ rating.character ? rating.character : 5 }\n            step={ 1 } marks\n            min={ 1 } max={ 10 }\n          />\n          <Spacer width='.5em' />\n          <Value>{ rating.character ? rating.character : '-' }</Value>\n        </Row>\n        { helper && <HelperText>{ rating.character ? RATINGS.character[rating.character - 1] : '' }</HelperText> }\n      </Section>\n      {/* PERFORMANCE */ }\n      <Section>\n        <Header>Performance</Header>\n        <Row align='center'>\n          <Slider\n            onChange={ updateValue('performance') }\n            value={ rating.performance ? rating.performance : 5 }\n            step={ 1 } marks\n            min={ 1 } max={ 10 }\n          />\n          <Spacer width='.5em' />\n          <Value>{ rating.performance ? rating.performance : '-' }</Value>\n        </Row>\n        { helper && <HelperText>{ rating.performance ? RATINGS.performance[rating.performance - 1] : '' }</HelperText> }\n      </Section>\n      {/* VISUALS */ }\n      <Section>\n        <Header>Visuals</Header>\n        <Row align='center'>\n          <Slider\n            onChange={ updateValue('visuals') }\n            value={ rating.visuals ? rating.visuals : 5 }\n            step={ 1 } marks\n            min={ 1 } max={ 10 }\n          />\n          <Spacer width='.5em' />\n          <Value>{ rating.visuals ? rating.visuals : '-' }</Value>\n        </Row>\n        { helper && <HelperText>{ rating.visuals ? RATINGS.visuals[rating.visuals - 1] : '' }</HelperText> }\n      </Section>\n      {/* SOUNDTRACK */ }\n      <Section>\n        <Header>Soundtrack</Header>\n        <Row align='center'>\n          <Slider\n            onChange={ updateValue('soundtrack') }\n            value={ rating.soundtrack ? rating.soundtrack : 5 }\n            step={ 1 } marks\n            min={ 1 } max={ 10 }\n          />\n          <Spacer width='.5em' />\n          <Value>{ rating.soundtrack ? rating.soundtrack : '-' }</Value>\n        </Row>\n        { helper && <HelperText>{ rating.soundtrack ? RATINGS.soundtrack[rating.soundtrack - 1] : '' }</HelperText> }\n      </Section>\n    </Container>\n  )\n}\n\nexport default Scales;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: ${ THEME.dark }EE;\n  width: 100%;\n  align-items: center;\n  padding-top: 1em;\n  box-shadow: 2px 2px 10px ${ THEME.primary }EE;\n`\n\nconst Section = styled.div`\n  width: 90%;\n`\n\nconst Value = styled.h2`\n  width: 1em;\n`\n\nconst Header = styled.h3`\n  margin: -.5em 0em -1.5em 0em;\n`\n\nconst HelperText = styled.p`\n  margin-top: -1.7em;\n  font-size: small;\n  padding-left: 1em;\n  opacity: .7;\n`","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { Frame, Row, Spacer } from \"solid-core/dist/components/styled\";\nimport styled from \"styled-components\";\nimport { overallScore, THEME } from \"../util\";\nimport Scales from \"./Scales\";\n\nconst MovieDetail = ({ movie, onUpdate, handleClose, onDelete }) => {\n\n  const [show, setShow] = useState(true);\n\n  if (!movie) return <></>\n\n  let total = overallScore(movie.rating);\n\n  function updateRatingValue(field) {\n    return (_, val) => {\n      onUpdate({ ...movie, rating: { ...movie.rating, [field]: +val } })\n    }\n  }\n\n  return (\n    <Dialog open={ true } onClose={ handleClose }>\n      <DialogTitle>{ movie.data.Title }</DialogTitle>\n      <DialogContent>\n        <Frame\n          fit='cover'\n          width='400px'\n          style={ { maxWidth: '100%' } }\n        >\n          <img src={ movie.data.Poster } alt={ `${ movie.data.title } Poster` } />\n        </Frame>\n        <Ratings>\n          { total && <Total>{ total }</Total> }\n          <Spacer />\n          <Scales rating={ movie.rating } updateValue={ updateRatingValue } helper={ show } />\n        </Ratings>\n      </DialogContent>\n      <DialogActions>\n        <Row>\n          <Button color=\"secondary\" onClick={ onDelete(movie) }>Delete</Button>\n          <Spacer />\n          <Button onClick={ () => setShow(!show) }>{ show ? 'Hide' : 'Show' } Explanation</Button>\n          <Button variant='contained' color='secondary' href={ `https://www.imdb.com/title/${ movie.id }` }>More INfo</Button>\n        </Row>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default MovieDetail;\n\nconst Ratings = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 90%;\n  height: 95%;\n  display: flex;\n  flex-direction: column;\n  `\n\nconst Total = styled.span`\n  font-size: 5em;\n  align-self: flex-end;\n  background: ${ THEME.primary };\n  color: ${ THEME.dark };\n  padding: .1em;\n  text-shadow: 1px 1px 5px ${ THEME.light }70;\n  box-shadow: 2px 2px 10px ${ THEME.light }DD;\n`","import { Chip, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { Row } from \"solid-core\";\nimport styled from \"styled-components\";\nimport { THEME } from \"../../util\";\n\nfunction ChipField({ data, onSubmit, onDelete, showForm, toggleEdit }) {\n\n  const [value, setValue] = useState(\"\");\n\n  function checkReturn(e) {\n    if (e.key !== 'Enter' || !value) return;\n    setValue(\"\")\n    onSubmit(value)\n  }\n\n  return (\n    <Row wrap=\"wrap\">\n      {\n        data.map(d => (\n          <Chip\n            key={ d }\n            onDelete={ () => onDelete(d) }\n            color=\"primary\"\n            label={ d }\n            size=\"small\"\n            style={ { marginBottom: '.2em', marginLeft: '.2em' } } />\n        ))\n      }\n      {\n        !showForm ?\n          <Chip\n            className='clickable'\n            onClick={ toggleEdit }\n            label='add tag...'\n            color='secondary'\n            size='small'\n            style={ { marginBottom: '.2em', marginLeft: '.2em', color: THEME.dark } } />\n          : <Background>\n            <TextField\n              autoFocus\n              color=\"primary\"\n              fullWidth\n              style={ { opacity: .5 } }\n              placeholder=\"add tag...\"\n              value={ value }\n              onBlur={ toggleEdit }\n              onChange={ e => setValue(e.target.value) }\n              onClick={ e => e.stopPropagation() }\n              onKeyDown={ checkReturn } />\n          </Background>\n      }\n    </Row>\n  )\n}\n\nexport default ChipField;\n\nconst Background = styled.div`\n  background: ${ THEME.dark }EE;\n  border-radius: .3em;\n  width: 90%;\n  padding: .2em;\n`","import { Card, Column, Frame, Spacer } from \"solid-core/dist/components/styled\";\nimport styled from \"styled-components\";\nimport { overallScore, THEME } from \"../../util\";\nimport ChipField from \"./ChipField\";\n\n\nconst Grid = ({\n  movies,\n  addTag,\n  removeTag,\n  focus,\n  toggleFocus,\n  openRating\n}) => {\n\n  return (\n    <Container>\n      {\n        movies.map(m => (\n          <Column justify='flex-start' align='center' width='100%' key={ m.id }>\n            <Card className=\"clickable\" onClick={ openRating(m) }>\n              <Frame\n                position='absolute'\n                fit='cover'\n                top='0' left='0'\n                width='100%' height='20em'\n                focusX='center' focusY='15%'\n              >\n                <img src={ m.data.Poster } alt={ `${ m.data.Title } Poster` } />\n              </Frame>\n              <Total>{ !!overallScore(m.rating) ? overallScore(m.rating) : <span className='material-icons'>star_half</span> }</Total>\n              <Column height='9em' justify='flex-end'>\n                <Title>{ m.data.Title }</Title>\n              </Column>\n              <Spacer height='1em' />\n              <ChipField\n                data={ m.tags }\n                onSubmit={ addTag(m) }\n                onDelete={ removeTag(m) }\n                showForm={ focus === m.id }\n                toggleEdit={ toggleFocus(m.id) }\n              />\n            </Card>\n          </Column>\n        ))\n      }\n    </Container>\n  )\n}\n\nexport default Grid;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  width: 95%;\n  padding: 0em 1em;\n  * {\n    justify-self: center;\n  }\n`\n\nconst Title = styled.h2`\n  margin: 0px;\n  padding: .1em;\n  background: ${ THEME.primary }CC;\n  color: ${ THEME.light };\n  border-radius: 2px;\n`\n\nconst Total = styled.span`\n  font-size: 2.5em;\n  align-self: flex-end;\n  background: ${ THEME.primary };\n  color: ${ THEME.dark };\n  padding: .1em;\n  text-shadow: 1px 1px 5px ${ THEME.light }70;\n  box-shadow: 2px 2px 10px ${ THEME.light }DD;\n  position: absolute;\n  top: -.1em;\n  right: .2em;\n  min-width: 50px;\n  text-align: center;\n  border-radius: 2px;\n`","import { Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { Row } from \"solid-core/dist/components/styled\";\nimport styled from \"styled-components\";\nimport { overallScore, sortExternalRating, sortRating, THEME } from \"../../util\";\nimport ChipField from \"./ChipField\";\n\n\nconst Table = ({\n  movies,\n  addTag,\n  removeTag,\n  focus,\n  toggleFocus,\n  openRating,\n  changeSort\n}) => {\n\n  const [sortedBy, setSortedBy] = useState('RATE');\n\n  function updateSort(FIELD) {\n    setSortedBy(FIELD);\n    switch (FIELD) {\n      case 'RATE':\n        changeSort(() => sortRating)\n        break;\n      case 'IMDB':\n        changeSort(() => sortExternalRating('imdbRating'))\n        break;\n      case 'META':\n        changeSort(() => sortExternalRating('Metascore'))\n        break;\n      default:\n    }\n  }\n\n  function buildRows() {\n    let rank = 1;\n    let prevScore;\n    return movies.map((m, i) => {\n      let score = overallScore(m.rating);\n      if (prevScore && prevScore !== score) {\n        rank = i + 1;\n      }\n      prevScore = score;\n      return (\n        <TableRow className='clickable' onClick={ openRating(m) } key={ m.id }>\n          <Rank>{ rank }</Rank>\n          <Row align='center'>\n            <img src={ m.data.Poster } alt={ `${ m.data.Title } Poster` } />\n            <h2>{ m.data.Title }</h2>\n          </Row>\n          <ChipField\n            data={ m.tags }\n            onSubmit={ addTag(m) }\n            onDelete={ removeTag(m) }\n            showForm={ focus === m.id }\n            toggleEdit={ toggleFocus(m.id) }\n          />\n          <Rating style={ { justifySelf: 'center' } }>{ score || '??' }</Rating>\n          <p style={ { justifySelf: 'center' } }>{ m.data.imdbRating }</p>\n          <p style={ { justifySelf: 'center' } }>{ m.data.Metascore }</p>\n        </TableRow>\n      )\n    })\n  }\n\n  return (\n    <Container>\n      <TableRow style={ { background: 'none', height: 'default' } }>\n        <p></p>\n        <Button style={ { justifyContent: 'flex-start' } } color='primary'>Title</Button>\n        <Button style={ { justifyContent: 'flex-start' } } color='primary'>Tags</Button>\n        <Button\n          variant={ sortedBy === 'RATE' ? 'contained' : 'text' }\n          onClick={ () => updateSort('RATE') }\n          color='primary'>\n          Rating\n        </Button>\n        <Button\n          variant={ sortedBy === 'IMDB' ? 'contained' : 'text' }\n          onClick={ () => updateSort('IMDB') }\n          color='primary'>\n          imdb\n        </Button>\n        <Button\n          variant={ sortedBy === 'META' ? 'contained' : 'text' }\n          onClick={ () => updateSort('META') }\n          color='primary'>\n          Meta\n        </Button>\n      </TableRow>\n      { buildRows() }\n    </Container>\n  )\n}\n\nexport default Table;\n\nconst Container = styled.div`\n  display: grid;\n  width: 95%;\n  padding: .5em 1em;\n  row-gap: .5em;\n  `\n\nconst TableRow = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: 2.5em 2fr 1.5fr 4em 4em 5em;\n  padding: 0em .5em;\n  background: ${ THEME.dark }EE;\n  border-radius: 5px;\n  & img {\n    height: 6em;\n    margin: .2em .5em;\n    box-shadow: 2px 2px 5px ${ THEME.primary }AA;\n  }\n  `\n\nconst Rank = styled.h2`\n  text-align: center;\n  background: ${ THEME.secondary };\n  color: ${ THEME.dark };\n  border-radius: 5px;\n  padding: .3em .1em;\n  `\n\nconst Rating = styled.h2`\n  text-align: center;\n  color: ${ THEME.light };\n  font-size: 2em;\n  text-shadow: 3px 3px 10px ${ THEME.primary }DD;\n`","import { Button, Fab, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { Column, Row, Spacer } from \"solid-core/dist/components/styled\"\nimport styled from \"styled-components\";\nimport { overallScore, sortRating, THEME } from \"../../util\";\nimport Grid from \"./Grid\";\nimport Table from \"./Table\";\n\nconst RATE_FILTERS = [\n  'ALL',\n  'UNRATED',\n  'RATED'\n];\n\nconst MovieList = ({ movies, onSelect, onUpdate }) => {\n\n  const [displayList, setList] = useState([])\n  const [focus, setFocus] = useState(null)\n  const [rateFilter, setRateFilter] = useState(0)\n  const [factor, setFactor] = useState(1)\n  const [sortFunction, setSortFunction] = useState(() => sortRating)\n  const [gridView, setGridView] = useState(true)\n  // FILTERS\n  const [tagFilter, setTagFilter] = useState('')\n  const [genreFilter, setGenreFilter] = useState('')\n  const [yearFilter, setYearFilter] = useState('')\n  const [titleFilter, setTitleFilter] = useState('')\n\n  useEffect(() => {\n    setList(movies\n      .filter(m => !rateFilter\n        || (rateFilter === 1 && !overallScore(m.rating))\n        || (rateFilter === 2 && !!overallScore(m.rating)))\n      .filter(m => !tagFilter\n        || m.tags.findIndex(t => t.toLowerCase().indexOf(tagFilter.toLowerCase()) >= 0) >= 0)\n      .filter(m => !genreFilter\n        || m.data.Genre.split(', ').findIndex(t => t.toLowerCase().indexOf(genreFilter.toLowerCase()) >= 0) >= 0)\n      .filter(m => !yearFilter\n        || m.data.Year.indexOf(yearFilter) === 0)\n      .filter(m => !titleFilter\n        || m.data.Title.toLowerCase().indexOf(titleFilter.toLowerCase()) === 0)\n      .sort(sortFunction(factor)))\n  }, [\n    movies,\n    tagFilter,\n    genreFilter,\n    yearFilter,\n    rateFilter,\n    titleFilter,\n    sortFunction,\n    factor\n  ])\n\n  function addTag(movie) {\n    return (tag) => {\n      onUpdate({ ...movie, tags: [...movie.tags, tag] })\n    }\n  }\n\n  function removeTag(movie) {\n    return (tag) => {\n      let i = movie.tags.indexOf(tag);\n      onUpdate({ ...movie, tags: [...movie.tags.slice(0, i), ...movie.tags.slice(i + 1)] });\n    }\n  }\n\n  function toggleFocus(id) {\n    return e => {\n      e.stopPropagation()\n      if (focus === id) setFocus(null)\n      else setFocus(id)\n    }\n  }\n\n  function openRating(m) {\n    return e => {\n      e.stopPropagation();\n      onSelect(m)\n    }\n  }\n\n  return (\n    <Column align='center'>\n      <Spacer height='1em' />\n      <Row width='90%' align='center'>\n        <Spacer />\n\n        {/* FILTERS */ }\n        <Background>\n          <TextField fullWidth placeholder='find movie' onChange={ e => setTitleFilter(e.target.value) } />\n        </Background>\n        <Background>\n          <TextField fullWidth placeholder='filter by tag' onChange={ e => setTagFilter(e.target.value) } />\n        </Background>\n        {\n          window.innerWidth > 680\n          &&\n          <>\n            <Background>\n              <TextField fullWidth placeholder='filter by genre' onChange={ e => setGenreFilter(e.target.value) } />\n            </Background>\n            <Background>\n              <TextField fullWidth placeholder='filter by year' onChange={ e => setYearFilter(e.target.value) } />\n            </Background>\n          </>\n        }\n\n        <Button\n          variant=\"outlined\"\n          color='secondary'\n          style={ { margin: '0em .5em', width: 100 } }\n          onClick={ () => rateFilter + 1 >= RATE_FILTERS.length ? setRateFilter(0) : setRateFilter(rateFilter + 1) }\n        >\n          { RATE_FILTERS[rateFilter] }\n        </Button>\n        {\n          window.innerWidth >= 800 &&\n          <Fab\n            size='small'\n            color='secondary'\n            style={ { margin: '0em .2em' } }\n            onClick={ () => setGridView(!gridView) }\n          >\n            <span className='material-icons'>{ gridView ? 'table_rows' : 'grid_view' }</span>\n          </Fab>\n        }\n        <Fab\n          size='small'\n          color='secondary'\n          style={ { margin: '0em .2em' } }\n          onClick={ () => setFactor(factor * -1) }\n        >\n          <span className='material-icons'>{ factor > 0 ? 'arrow_downward' : 'arrow_upward' }</span>\n        </Fab>\n      </Row>\n      {\n        gridView ?\n          <Grid\n            movies={ displayList }\n            addTag={ addTag }\n            removeTag={ removeTag }\n            focus={ focus }\n            toggleFocus={ toggleFocus }\n            openRating={ openRating } />\n          : <Table\n            movies={ displayList }\n            addTag={ addTag }\n            removeTag={ removeTag }\n            focus={ focus }\n            toggleFocus={ toggleFocus }\n            openRating={ openRating }\n            changeSort={ setSortFunction }\n          />\n      }\n    </Column>\n  )\n}\n\nexport default MovieList;\n\nconst Background = styled.div`\n      background: ${ THEME.dark }DD;\n      padding: .2em;\n      margin: 0em .3em;\n      border-radius: .3em;\n      width: 30%;\n      min-width: 100px;\n      max-width: 10em;\n      `","import { useEffect, useState } from 'react';\nimport { Box, Button, CircularProgress, TextField } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { searchMovies, SEARCH_DELAY, THEME } from '../util';\nimport { Card, CardHeader, Column, Icon, Row, Spacer } from 'solid-core/dist/components/styled';\n\nconst Search = ({ add, idList }) => {\n\n  const [searchResults, setSearchResults] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [timer, setTimer] = useState(null);\n\n  function handleChange({ target }) {\n    // CANCEL EXISTING TIMER\n    if (timer) clearTimeout(timer)\n    // CREATE NEW TIMER\n    setTimer(setTimeout(() => setQuery(target.value), SEARCH_DELAY))\n  }\n\n  useEffect(() => {\n    setTimer(null)\n    if (!query) {\n      setSearchResults([]);\n      return\n    }\n    // GET NEW RESULTS\n    searchMovies(query)\n      .then(setSearchResults)\n  }, [query])\n\n  return (\n    <Column width=\"100%\" height=\"none\" align=\"center\">\n      <Spacer height='.5em' />\n      <Background>\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          onChange={ handleChange }\n          InputProps={ {\n            endAdornment: !timer ? <Icon theme={ THEME } className=\"material-icons\">check</Icon>\n              : <Box><CircularProgress color='primary' /></Box>\n          } }\n          placeholder='Search Movie...'\n        />\n      </Background>\n      <Row wrap=\"wrap\" justify=\"space-around\">\n        {\n          (query && !searchResults.length) &&\n          <ErrorMsg>No matching titles found...</ErrorMsg>\n        }\n        { // SHOW SEARCH RESULTS\n          searchResults.map(movie => (\n            <Card key={ movie.imdbID }>\n              <Row>\n                { // SHOW STOCK IMAGE IF NO POSTER\n                  movie.Poster !== \"N/A\" ?\n                    <Poster width='100em' src={ movie.Poster } alt={ `${ movie.Title }-poster` } />\n                    : <BigIcon className='material-icons'>theaters</BigIcon>\n                }\n                <Spacer width='1em' />\n                <CardHeader>{ movie.Title } ({ movie.Year })</CardHeader>\n              </Row>\n              <Actions>\n                <Spacer width=\".3em\" />\n                <Button\n                  disabled={ idList.includes(movie.imdbID) }\n                  color=\"primary\"\n                  onClick={ () => add(movie.imdbID) }\n                >\n                  <span className='material-icons'>\n                    { idList.includes(movie.imdbID) ? `check` : `add` }\n                  </span>\n                  Add To my movies\n                </Button>\n              </Actions>\n            </Card>\n          ))\n        }\n      </Row>\n    </Column>\n  )\n}\n\nexport default Search;\n\nconst Background = styled.div`\n  background: ${ THEME.dark };\n  border-radius: .3em;\n  width: 90%;\n  max-width: 30em;\n`\n\nconst ErrorMsg = styled.p`\n  color: ${ THEME.secondary };\n  font-weight: bold;\n`\n\nconst Poster = styled.img`\n  box-shadow: 2px 2px 10px ${ THEME.primary };\n`\n\nconst BigIcon = styled.h1`\n  font-size: 7em;\n  text-shadow: 2px 2px 10px ${ THEME.primary };\n`\n\nconst Actions = styled.div`\n  display: flex;\n  position: absolute;\n  bottom: .5em;\n  right: .5em;\n`","import { Button, IconButton } from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SaveButton from \"solid-core/dist/components/SaveButton\";\nimport { HeaderBar, Spacer } from \"solid-core/dist/components/styled\";\nimport { addToUpdateQueue, appLogin, deleteThing, initThing, loadAllByName, SaveState, setAttr } from \"solid-core/dist/pods\";\nimport styled from \"styled-components\";\nimport { movieShape } from \"../movieShape\";\nimport { AppTheme, getMovieData, THEME } from \"../util\";\nimport Loading from \"./Loading\";\nimport MovieDetail from \"./MovieDetail\";\nimport MovieList from \"./MovieList/MovieList\";\nimport Search from \"./Search\";\n\nconst Dashboard = ({ user }) => {\n\n  const { queue, updateQueue, saveFromQ, dataset, setDataset } = useContext(SaveState);\n  const { mui } = useContext(AppTheme);\n\n  const [loading, setLoading] = useState(false);\n  const [movies, updateMovies] = useState([]);\n  const [detail, setDetail] = useState(null);\n\n  useEffect(() => {\n    if (!dataset) return;\n    setLoading(true);\n    loadAllMovieData(loadAllByName(dataset, 'movie', movieShape))\n      .then(updateMovies)\n  }, [dataset]);\n\n  useEffect(() => setLoading(false), [movies])\n\n  async function loadAllMovieData(list) {\n    // GET ALL MOVIE DATA\n    let res = [];\n    for (let i in list) {\n      let movie = list[i];\n      if (movie.data) {\n        res = [...res, movie]\n        continue\n      }\n      let data = await getMovieData(movie.id);\n      res = [...res, { ...movie, data }]\n    }\n    return res;\n  }\n\n  async function addMovie(id) {\n    let data = await getMovieData(id);\n    let movie = { id, data, rating: {}, tags: [] };\n    let dataset\n    ({ dataset, thing: movie } = await initThing(\"movie\", movie, movieShape))\n    updateMovies([...movies, { ...movie, data }]);\n    setDataset(dataset)\n  }\n\n  async function deleteMovie(movie) {\n    let { dataset } = await deleteThing(movie.thing)\n    let i = movies.findIndex(m => m.thing.url === movie.thing.url)\n    updateMovies([...movies.slice(0, i), ...movies.slice(i + 1)])\n    setDataset(dataset)\n    setDetail(null)\n  }\n\n  function updateMovie(field, then) {\n    return (updatedMovie) => {\n      let thing = setAttr(updatedMovie.thing, movieShape[field], updatedMovie[field]);\n      updatedMovie.thing = thing;\n      updateQueue(addToUpdateQueue(queue, thing))\n      let i = movies.findIndex(m => m.id === updatedMovie.id);\n      updateMovies([...movies.slice(0, i), updatedMovie, ...movies.slice(i + 1)])\n      if (then) then(updatedMovie);\n    }\n  }\n\n  function deleteRating(m) {\n    return async e => {\n      e.stopPropagation();\n      await deleteMovie(m)\n    }\n  }\n\n  return (\n    <Layout>\n      <HeaderBar theme={ THEME }>\n        <h2>{ user && user.nickname ? `${ user.nickname }'s` : user && user.name ? `${ user.name }'s` : \"My\" } Movies</h2>\n        <Spacer />\n        {\n          user ?\n            <Link to=\"/profile\">\n              <IconButton color=\"inherit\"><span className=\"material-icons\">person</span></IconButton>\n            </Link>\n            :\n            <Button onClick={ appLogin } color=\"inherit\">Login</Button>\n        }\n      </HeaderBar>\n      <Content>\n        <Search idList={ movies.map(m => m.id) } add={ addMovie } />\n        <MovieList movies={ movies } onSelect={ setDetail } onUpdate={ updateMovie('tags') } />\n        <Loading loading={ loading } />\n        <MovieDetail\n          movie={ detail }\n          onUpdate={ updateMovie('rating', setDetail) }\n          handleClose={ () => setDetail(null) }\n          onDelete={ deleteRating } />\n      </Content>\n      <SaveButton ui={ mui } save={ saveFromQ } queue={ queue } />\n    </Layout>\n  )\n}\n\nexport default Dashboard;\n\nconst Layout = styled.div`\n  background: ${ THEME.light };\n  height: 100%;\n  display: grid;\n  grid-template-rows: 5.2em 1fr;\n  grid-template-areas: \n  \"header\"\n  \"main\";\n  `\n\nconst Content = styled.div`\n  background: ${ THEME.light };\n  display: flex;\n  flex-direction: column;\n  grid-area: main;\n`","import React from 'react';\nimport './App.css';\nimport {\n  Main,\n  appLogin,\n  getDomain,\n  loadDataset,\n  loadThing,\n  save,\n  SaveState,\n  Profile,\n  profileStruct,\n  newTheme\n} from 'solid-core';\nimport { useEffect, useState } from 'react';\nimport { handleIncomingRedirect, getDefaultSession } from '@inrupt/solid-client-authn-browser';\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom';\nimport * as mui from '@material-ui/core';\nimport Dashboard from './components/Dashboard';\nimport { AppTheme, THEME } from './util';\n\nconst muiTheme = newTheme(THEME)\n\nfunction App() {\n\n  const [user, setUser] = useState();\n  const [queue, updateQueue] = useState([]);\n  const [dataset, setDataset] = useState(null);\n  // PROFILE STATE\n  const [profile, setProfile] = useState();\n  const [edit, toggleEdit] = useState(false);\n\n  async function saveFromQ() {\n    let dataset = await save(queue);\n    updateQueue([])\n    setDataset(dataset)\n  }\n\n  useEffect(() => {\n    const getUser = async function () {\n      await handleIncomingRedirect()\n      let { info } = getDefaultSession()\n      if (info.isLoggedIn) setUser(info.webId)\n      else await appLogin()\n    }\n    getUser()\n  }, [])\n\n  // USER LOADED => GET SESSION\n  useEffect(() => {\n    if (user) {\n      // LOAD PROFILE\n      loadThing(user, profileStruct)\n        .then(res => {\n          if (res instanceof Error) {\n            console.error(res)\n          }\n          else setProfile(res)\n        })\n    }\n  }, [user])\n\n  // SESSION CONFIRMED => GET DATA\n  useEffect(() => {\n    if (profile) {\n      // LOAD MOVIE DATASET\n      loadDataset(getDomain(user) + \"/movies\")\n        .then(setDataset)\n    }\n  }, [profile, user])\n\n  return (\n    <SaveState.Provider value={ { queue, updateQueue, saveFromQ, dataset, setDataset } }>\n      <AppTheme.Provider value={ { ...THEME, mui } }>\n        <mui.ThemeProvider theme={ muiTheme }>\n          <Main>\n            <Router>\n              <Routes>\n                <Route path=\"/\" element={ <Dashboard user={ profile } /> } />\n                <Route path=\"/profile\"\n                  element={\n                    <SaveState.Consumer>\n                      {\n                        saveState => (\n                          <Profile\n                            profile={ profile }\n                            edit={ edit }\n                            toggleEdit={ toggleEdit }\n                            ui={ mui }\n                            theme={ THEME }\n                            saveState={ saveState }\n                            onChange={ setProfile }\n                          />\n                        )\n                      }\n                    </SaveState.Consumer>\n                  } />\n              </Routes>\n            </Router>\n          </Main>\n        </mui.ThemeProvider>\n      </AppTheme.Provider>\n    </SaveState.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}